"""
https://www.dave4math.com/mathematics/tonelli-shanks-algorithm/
https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm

Tonelli-Shanks：
快速求得二次剩餘的 square root 的方法

找 square root 的行為在數學專有名詞中，似乎叫做 "quadratic congruence"

所有非 2 的 prime 符合以下兩種 case：
1. p ≡ 1 mod 4
2. p ≡ 3 mod 4 
而第二種 case 可以用費馬小定理來解 (?)
1. a^p ≡ a (mod p) for p is prime
2. a^(p-1) ≡ 1 (mod p) for p is prime

對於 r^2 ≡ a (mod p)，Tonelli-Shanks 可以求 r

假設 (a,p) = 1, x^2 = a (mod p), n k 為整數滿足 p-1 = 2^n * k, n >= 1 and k is odd, x 可以由以下 loop 求出
1. 令 t = a(k+1 / 2) (mod p), 找出 i 滿足 r^(2^i) = 1 (mod p) and r = a^k (mod p)
2. 如果 i = 0, 則 x = +-t (mod p)；反之設 u = q^(k * 2^(n-i-1)) (mod p)，回第一步，且 t' = tu, r' = r * u^2
"""

a = 8479994658316772151941616510097127087554541274812435112009425778595495359700244470400642403747058566807127814165396640215844192327900454116257979487432016769329970767046735091249898678088061634796559556704959846424131820416048436501387617211770124292793308079214153179977624440438616958575058361193975686620046439877308339989295604537867493683872778843921771307305602776398786978353866231661453376056771972069776398999013769588936194859344941268223184197231368887060609212875507518936172060702209557124430477137421847130682601666968691651447236917018634902407704797328509461854842432015009878011354022108661461024768
p = 30531851861994333252675935111487950694414332763909083514133769861350960895076504687261369815735742549428789138300843082086550059082835141454526618160634109969195486322015775943030060449557090064811940139431735209185996454739163555910726493597222646855506445602953689527405362207926990442391705014604777038685880527537489845359101552442292804398472642356609304810680731556542002301547846635101455995732584071355903010856718680732337369128498655255277003643669031694516851390505923416710601212618443109844041514942401969629158975457079026906304328749039997262960301209158175920051890620947063936347307238412281568760161

# p-1 = Q * 2^S
# p = 2**5 * 954120370687322914146122972233998459200447898872158859816680308167217527971140771476917806741741954669649660571901346315204689346338598170453956817519815936537358947562992998219689389048659064525373129357241725287062389210598861122210202924913207714234576425092302797731417568997718451324740781706399282458933766485546557667471923513821650137452270073644040775333772861141937571923370207346920499866643252229871969089272458772885542785265582976727406363864657240453651605953310106772206287894326347182626297341950061550911217983033719590822010273407499914467509412786192997501621581904595748010853351200383799023755
# S = 5
# Q = 954120370687322914146122972233998459200447898872158859816680308167217527971140771476917806741741954669649660571901346315204689346338598170453956817519815936537358947562992998219689389048659064525373129357241725287062389210598861122210202924913207714234576425092302797731417568997718451324740781706399282458933766485546557667471923513821650137452270073644040775333772861141937571923370207346920499866643252229871969089272458772885542785265582976727406363864657240453651605953310106772206287894326347182626297341950061550911217983033719590822010273407499914467509412786192997501621581904595748010853351200383799023755

# https://doc.sagemath.org/html/en/reference/finite_rings/sage/rings/finite_rings/integer_mod.html#sage.rings.finite_rings.integer_mod.square_root_mod_prime
a = Mod(a, p)
r = sage.rings.finite_rings.integer_mod.square_root_mod_prime(a, p)