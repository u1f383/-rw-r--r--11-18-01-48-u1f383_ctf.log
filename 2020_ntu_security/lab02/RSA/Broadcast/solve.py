#!/usr/bin/env python3
import gmpy2
import functools
from Crypto.Util.number import *

n0 = 56758437595830360367482926227620316553120225863072743835549685594777658790834690483573470755488611520354133053048681069594709897054644284928194598027828428499349046993947969326135305585000504491324690831038906792494502168902281276900533010023601555434505378614526390208911873140416045884606257849652843178277
c0 = 49180891314088161279894133406229517143027802239648438985703528425701809472118463348291868305084395864542030247780635549286358342330029691461023191484178844346712141785777143533478202519186593829475878597909237740061262428011130458127170375471563084215316195852307560960234846634231443192058855719014221091842
n1 = 87372386390978254124202288963710066682136185199241124910336000114001508346510117898306519646711111069431222709353408787032152987338124635060543032378078840312217555593170660385014759099748066802666966912786536567284216572971566786540120454008083966050270944910115743382431040811308910678234363129332675590647
c1 = 596986418759100786909698919012830063681426481164675102408027517341683776937700806534042736397169898919802594885315039499787572723109758745693084134593459504018819066172600826071356684686571407196806795179883606571945949429792406572248914604328155273814094686398117383255999540893122859925303719221086938727
n2 = 104428005055346966558368598870320682776637424158312823763098251397639769231178522677401135653570667802491662789685401293879031519553352769245952685342171352196916185994539800974800235774865859342954007482313211400018451995597079855467536325369409426668056937998544516471839314866992963675015194487715705066749
c2 = 79783560069311077730012694469950152158747841821973543892154335619128665602905781341298582150969615060003640720075112459458272457945848878875936511414052188054250321370386308976677637691662300514820707380789737254583398340499776705374169945250695954222072910907569982793498082997675044448421038096451148287911

def crt(a, m):
    '''
    Input: [a_1, ... a_n], [m_1, ..., m_n]
        x = a_1 (mod m_1)
        x = a_2 (mod m_2)
        ...
        x = a_n (mod m_n)
    Output: x
    '''
    
    prod, total = functools.reduce(lambda x, y: x * y, m), 0
    print(prod)
    for ai, mi in zip(a, m):
        Mi = prod // mi
        total += ai * Mi * (gmpy2.gcdext(Mi, mi)[1] % mi)
    return total % prod

c = crt([c0, c1, c2], [n0, n1, n2])
m, _ = gmpy2.iroot(c, 3)
print(long_to_bytes(m))
