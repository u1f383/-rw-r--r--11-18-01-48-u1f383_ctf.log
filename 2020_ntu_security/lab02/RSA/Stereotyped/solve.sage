#!/usr/bin/env python3
from Crypto.Util.number import *

n = 52178350834061676530661142763437528175939173162548834910461380382483681023504449475239900491841074782821392249320860823097325377779179778151007892499580930406461580726768214088743068238597081895989447624756966077578276481781135051643517472303490237203407063499270608676859611056919106912278542255222168336947
c = 34949879894352773381563766686969406659651067393178989183552474327060142011300198059019233995661990511999145886998610787173636314451335648930866647600088223983541020098878256484637324053779768909874288988325476084700252205177950492909985360754246255356379604802452883346364649868902398622065306258498220396345

P.<x> = PolynomialRing(Zmod(n))

pad = b'\x00' + b'\xff' * (128 - 2 - 16) + b'\x00'
pad = bytes_to_long(pad) << (8 * 16)

f = (pad + x) ^ 3 - c

roots = f.small_roots()
if roots:
    root = roots[0]
    flag = long_to_bytes(root)
    print(flag)
